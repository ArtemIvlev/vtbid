# OpenAPI version identifier - required for OpenAPI 3.0 domains
openapi: 3.0.0

#######################
# Optional info section
#######################
info:
  title: Common Components
  description: Common components for VTBID REST APIs
  version: '1.0.0'

components:

  ####################
  # Common data models
  ####################
  schemas:
    ErrorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    metadata:
      type: object
      description: стандартные данные объекта
      properties:
        createadAt: 
          type: string
          description: дата создания
          format: date-time
        createadBy: 
          type: string
          description: имя создавшего пользователя  
        modifiedAt:
          type: string
          description: дата изменения
          format: date-time
        modifiedBy: 
          type: string
          description: имя изменившего пользователя
        qaLevel: 
          type: string
          description: уровень доверия 1-100 (можно будет потом сделать по десяткам и субстатусы между ними)
    Adress:
      type: object
      properties:
        id: 
          type: string
          format: uuid
        area:
          description: --
          type: string
        block: 
          description: --
          type: string
        city:
          description: --
          type: string
        country: 
          description: --
          type: string
        district: 
          description: --
          type: string
        fiasCode: 
          description: --
          type: string
        fiasId: 
          description: --
          type: string
        flat: 
          description: --
          type: string
        house: 
          description: --
          type: string
        okato: 
          description: --
          type: string
        oktmo: 
          description: --
          type: string
        postalCode: 
          description: --
          type: string
        region: 
          description: --
          type: string
        settlement: 
          description: --
          type: string
        street: 
          description: --
          type: string
        unrestrictedValue: 
          description: --
          type: string
        type: 
          description: --
          type: string
        value: 
          description: --
          type: string
        streetType: 
          description: --
          type: string
        fiasLevel: 
          description: --
          type: string
    Characteristic:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    RelatedPartyRef:
      type: object
      description: >-
        Ссылка на сторону (Party) или на связь (PartyRole)
        RelatedParty reference. A related party defines party or party role linked
        to a specific entity.
      properties:
        '@referredType':
          type: string
          description: >-
            Generic attribute indicating the name of the class type of the
            referred resource entity.
        href:
          type: string
          description: >-
            Reference of the related party, could be a party reference or a party
            role reference
        id:
          type: string
          description: Unique identifier of a related party
        name:
          type: string
          description: Name of the related party
        role:
          type: string
          description: Role of the related party.
    PartyRef:
      type: object
      description: Party reference. A party represents an organization or an individual.
      required:
        - id
        - href
      properties:
        '@referredType':
          type: string
          description: >-
            Generic attribute indicating the name of the class type of the
            referred resource entity.
        description:
          type: string
          description: Text describing the referred party
        href:
          type: string
          description: >-
            Reference of the referred party (such as a partner or any other party
            role).
        id:
          type: string
          description: Unique identifier of the referred party
        name:
          type: string
          description: Name of the referred party (such as a partner or any other party role)
        validFor:
          $ref: '#/components/schemas/ValidFor'
    ContactMedium:
      type: object
      properties:
        validFor:
          $ref: '#/components/schemas/ValidFor'
        preferred:
          type: string
        vaidated: 
          type: boolean
        canBeLogin:
          description: если да, то значение данного поля может быть использовано для входа в личный кабинет. В случае если у одного пользователя данное значение выбрано для входа, то такое же значение для других пользователей для входа выбранно быть не может.
          type: boolean
      discriminator:
        propertyName: objectType
      oneOf:
        - $ref: '#/components/schemas/PhoneNumber'
        - $ref: '#/components/schemas/Email'
    PhoneNumber:
      type: object
      properties:
        objectType: 
          type: string
          enum: ["phone"]
        phoneNumber: 
          type: string
          format: phone
          pattern: ^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\s\./0-9]*$
    Email:
      type: object
      properties:
        objectType: 
          type: string
          enum: ["email"]
        email: 
          type: string
          format: email
    ValidFor:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
    ExistsDuring:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
    
  ####################
  # Common parameters
  ####################
  parameters:
    offsetParam:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before returning the results
    limitParam:
      in: query
      name: limit
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 20
      description: The number of items to return
    fieldsParam:
      in: query
      name: fields
      schema:
        type: array
        items:
          type: string
      description: Какие поля необходимо вернуть
    
    filterParam:
      in: query
      name: filter
      description: Фильтр запроса в JSON виде
      content:
        application/json:
          schema:
            type: object
    depthParam:
      in: query
      name: depth
      description: Глубина субзапросов для подъобектов
      schema:
        type: integer
        maximum: 3
        default: 1
    expandParam:
      in: query
      name: expand
      description: Указание какой именно подъобект нужно раскрыть
      schema:
        type: array
        items:
          type: string
      example: individual.documents
  #######################
  # Common request bodies
  #######################
  requestBodies:
    NewItem:
      description: A JSON object containing item data
      required: true
      content:
        application/json:
          schema:
            type: object

  ####################
  # Common responses
  ####################
  responses:
    GeneralError:
      description: An error occurred
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'

  #########################
  # Common headers
  # (except request headers - they are defined as parameters)
  #########################
  headers:
    X-RateLimit-Limit:
      description: Request limit per hour
      schema:
        type: integer
      example: 100
    X-RateLimit-Remaining:
      description: Remaining requests for the hour
      schema:
        type: integer
      example: 94

  #######################
  # Common path items
  #######################
  pathitems:
    EntityOperations:
      get:
        summary: Get all items
        description: This operation supports pagination
        parameters:
          - $ref: '#/components/parameters/offsetParam'
          - $ref: '#/components/parameters/limitParam'
        responses:
          '200':
            description: A list of items
          default:
            $ref: '#/components/responses/GeneralError'
      post:
        summary: Add a new item
        requestBody:
          $ref: '#/components/requestBodies/NewItem'
        responses:
          '201':
            description: Created

  ######################################
  # Common examples of input/output data
  ######################################
  examples:
    tshirt:
      summary: Sample T-shirt data
      value:
        # Example value starts here
        id: 17
        name: T-shirt
        description: 100% cotton shirt
        categories: [clothes]

  #########################
  # Common link definitions
  # See: https://swagger.io/docs/specification/links/
  #########################
  links: {}

  #########################
  # Common callback definitions
  # See: https://swagger.io/docs/specification/callbacks/
  #########################
  callbacks: {}